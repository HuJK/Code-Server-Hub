{
	"c_cpp.command.configurationSelect.title": "Sélectionner une configuration...",
	"c_cpp.command.configurationProviderSelect.title": "Changer le fournisseur de configuration...",
	"c_cpp.command.configurationEditJSON.title": "Modifier les configurations (JSON)",
	"c_cpp.command.configurationEditUI.title": "Modifier les configurations (IU)",
	"c_cpp.command.switchHeaderSource.title": "Basculer l'en-tête/la source",
	"c_cpp.command.enableErrorSquiggles.title": "Activer les tildes d'erreur",
	"c_cpp.command.disableErrorSquiggles.title": "Désactiver les tildes d'erreur",
	"c_cpp.command.toggleIncludeFallback.title": "Activer/désactiver le basculement du moteur IntelliSense en cas d'erreurs d'inclusion",
	"c_cpp.command.toggleDimInactiveRegions.title": "Activer/désactiver la colorisation des régions inactives",
	"c_cpp.command.resetDatabase.title": "Réinitialiser la base de données IntelliSense",
	"c_cpp.command.takeSurvey.title": "Répondre à l'enquête",
	"c_cpp.command.buildAndDebugActiveFile.title": "Générer et déboguer le fichier actif",
	"c_cpp.command.logDiagnostics.title": "Journaliser les diagnostics",
	"c_cpp.command.referencesViewGroupByType.title": "Regrouper par type référence",
	"c_cpp.command.referencesViewUngroupByType.title": "Dissocier par type référence",
	"c_cpp.command.rescanWorkspace.title": "Réanalyser l'espace de travail",
	"c_cpp.command.vcpkgClipboardInstallSuggested.title": "Copier la commande vcpkg install dans le Presse-papiers",
	"c_cpp.command.vcpkgOnlineHelpSuggested.title": "Visiter la page d'aide de vcpkg",
	"c_cpp.configuration.clang_format_path.description": "Chemin complet de l'exécutable clang-format. Si rien n'est spécifié, et si clang-format est disponible dans la variable d'environnement PATH, la valeur de cette dernière est utilisée. En l'absence de valeur dans la variable d'environnement PATH, une copie de clang-format groupée en bundle avec l'extension est utilisée.",
	"c_cpp.configuration.clang_format_style.description": "Style de codage, prend actuellement en charge : Visual Studio, LLVM, Google, Chromium, Mozilla, WebKit. Utilisez \"file\" pour charger le style à partir d'un fichier .clang-format dans le répertoire actuel ou parent. Utilisez {clé: valeur, ...} pour définir des paramètres spécifiques. Par exemple, le style \"Visual Studio\" est similaire à : { BasedOnStyle: LLVM, UseTab: Never, IndentWidth: 4, TabWidth: 4, BreakBeforeBraces: Allman, AllowShortIfStatementsOnASingleLine: false, IndentCaseLabels: false, ColumnLimit: 0, AccessModifierOffset: -4, NamespaceIndentation: All }",
	"c_cpp.configuration.clang_format_fallbackStyle.description": "Nom du style prédéfini utilisé par défaut quand le clang-format est appelé avec le style \"file\", mais que le fichier .clang-format est introuvable. Les valeurs possibles sont Visual Studio, LLVM, Google, Chromium, Mozilla, WebKit, aucune ou utilisez {clé: valeur, ...} pour définir des paramètres spécifiques. Par exemple, le style \"Visual Studio\" est similaire à : { BasedOnStyle: LLVM, UseTab: Never, IndentWidth: 4, TabWidth: 4, BreakBeforeBraces: Allman, AllowShortIfStatementsOnASingleLine: false, IndentCaseLabels: false, ColumnLimit: 0, AccessModifierOffset: -4 }",
	"c_cpp.configuration.clang_format_sortIncludes.description": "Si cette option est définie, elle remplace le comportement de tri des inclusions déterminé par le paramètre SortIncludes.",
	"c_cpp.configuration.intelliSenseEngine.description": "Contrôle le fournisseur IntelliSense. \"Tag Parser\" fournit des résultats \"approximatifs\" indépendants du contexte. \"Default\" fournit des résultats contextuels. \"Disabled\" désactive les fonctionnalités du service de langage C/C++.",
	"c_cpp.configuration.intelliSenseEngineFallback.description": "Contrôle si le moteur IntelliSense bascule automatiquement vers l'analyseur de balises pour les unités de traduction qui contiennent des erreurs #include.",
	"c_cpp.configuration.autocomplete.description": "Contrôle le fournisseur de complétion automatique. \"Default\" permet d'utiliser le moteur IntelliSense actif. \"Disabled\" permet d'utiliser la complétion basée sur les mots, fournie par Visual Studio Code.",
	"c_cpp.configuration.errorSquiggles.description": "Contrôle si les erreurs de compilation suspectées détectées par le moteur IntelliSense sont signalées à l'éditeur. Ce paramètre est ignoré par le moteur de l'analyseur de balises.",
	"c_cpp.configuration.dimInactiveRegions.description": "Contrôle si les blocs de préprocesseur inactifs ont une couleur différente de celle du code actif. Ce paramètre n'a pas d'effet si IntelliSense est désactivé ou utilise le thème Contraste élevé par défaut.",
	"c_cpp.configuration.inactiveRegionOpacity.description": "Contrôle l'opacité des blocs de préprocesseur inactifs. Varie entre 0,1 et 1,0. Ce paramètre s'applique uniquement quand l'estompage des régions inactives est activé.",
	"c_cpp.configuration.inactiveRegionForegroundColor.description": "Contrôle la coloration de la police des blocs de préprocesseur inactifs. L'entrée se présente sous la forme d'un code de couleur hexadécimal ou d'une couleur de thème valide. Si ce paramètre n'est pas défini, la valeur par défaut est le schéma de coloration de syntaxe de l'éditeur. Ce paramètre s'applique uniquement quand l'estompage des régions inactives est activé.",
	"c_cpp.configuration.inactiveRegionBackgroundColor.description": "Contrôle la coloration d'arrière-plan des blocs de préprocesseur inactifs. L'entrée se présente sous la forme d'un code de couleur hexadécimal ou d'une couleur de thème valide. Si ce paramètre n'est pas défini, la valeur par défaut est Transparent. Ce paramètre s'applique uniquement quand l'estompage des régions inactives est activé.",
	"c_cpp.configuration.formatting.description": "\"Default\" permet d'activer la mise en forme du code. \"Disabled\" permet de désactiver la mise en forme du code.",
	"c_cpp.configuration.loggingLevel.description": "Verbosité de la journalisation dans le panneau Sortie. L'ordre des niveaux du moins détaillé au plus détaillé est : None < Error < Warning < Information < Debug.",
	"c_cpp.configuration.autoAddFileAssociations.description": "Contrôle si les fichiers sont automatiquement ajoutés à files.associations quand ils sont la cible d'une opération de navigation à partir d'un fichier C/C++.",
	"c_cpp.configuration.workspaceParsingPriority.description": "Contrôle si l'analyse des fichiers d'espace de travail non actifs utilise les périodes de veille pour éviter d'utiliser 100 % du processeur. Les valeurs les plus élevées/hautes/moyennes/basses correspondent approximativement à 100/75/50/25 % de l'utilisation du processeur.",
	"c_cpp.configuration.workspaceSymbols.description": "Symboles à ajouter aux résultats de la requête quand 'Accéder au symbole dans l'espace de travail' est appelé",
	"c_cpp.configuration.exclusionPolicy.description": "Indique à l'extension quand utiliser le paramètre \"files.exclude\" pendant la détermination des fichiers à ajouter à la base de données de navigation du code quand vous parcourez les chemins du tableau \"browse.path\". \"checkFolders\" signifie que les filtres d'exclusion sont évalués une seule fois par dossier (les fichiers individuels ne sont pas vérifiés). \"checkFilesAndFolders\" signifie que les filtres d'exclusion sont évalués sur chaque fichier et dossier rencontrés. Si votre paramètre \"files.exclude\" contient uniquement des dossiers, \"checkFolders\" est le meilleur choix, car il augmente la vitesse à laquelle l'extension peut initialiser la base de données de navigation du code.",
	"c_cpp.configuration.preferredPathSeparator.description": "Caractère utilisé comme séparateur de chemin dans les résultats d'autocomplétion de #include.",
	"c_cpp.configuration.simplifyStructuredComments.description": "If true, tooltips of hover and auto-complete will only display certain labels of structured comments. Otherwise, all comments are displayed.",
	"c_cpp.configuration.commentContinuationPatterns.items.anyof.string.description": "Modèle qui commence un bloc de commentaires multiligne ou monoligne. Le modèle consécutif a la valeur par défaut '*' pour les blocs de commentaires multilignes ou cette chaîne pour les blocs de commentaires monolignes.",
	"c_cpp.configuration.commentContinuationPatterns.items.anyof.object.begin.description": "Modèle qui commence un bloc de commentaires multiligne ou monoligne.",
	"c_cpp.configuration.commentContinuationPatterns.items.anyof.object.continue.description": "Texte à insérer sur la ligne suivante quand vous appuyez sur la touche Entrée dans un bloc de commentaires multiligne ou monoligne.",
	"c_cpp.configuration.commentContinuationPatterns.description": "Définit le comportement de l'éditeur quand vous appuyez sur la touche Entrée dans un bloc de commentaires multiligne ou monoligne.",
	"c_cpp.configuration.configurationWarnings.description": "Détermine si des notifications de fenêtre contextuelle s'affichent quand une extension de fournisseur de configuration ne peut pas fournir la configuration d'un fichier source.",
	"c_cpp.configuration.intelliSenseCachePath.description": "Définit le chemin de dossier des en-têtes précompilés mis en cache utilisés par IntelliSense. Le chemin du cache par défaut est \"%LocalAppData%/Microsoft/vscode-cpptools\" sur Windows, \"$XDG_CACHE_HOME/vscode-cpptools/\" sur Linux (ou \"$HOME/.cache/vscode-cpptools/\" si XDG_CACHE_HOME n'est pas défini) et \"$HOME/Library/Caches/vscode-cpptools/\" sur Mac. Le chemin par défaut est utilisé si aucun chemin n'est spécifié ou si le chemin spécifié n'est pas valide.",
	"c_cpp.configuration.intelliSenseCacheSize.description": "Taille maximale de l'espace du disque dur par espace de travail en mégaoctets pour les en-têtes précompilés mis en cache. L'utilisation réelle peut varier autour de cette valeur. La taille par défaut est 5 120 Mo. La mise en cache des en-têtes précompilés est désactivée quand la taille est égale à 0.",
	"c_cpp.configuration.default.includePath.description": "Valeur à utiliser dans une configuration si \"includePath\" n'est pas spécifié ou valeurs à insérer si \"${default}\" est présent dans \"includePath\".",
	"c_cpp.configuration.default.defines.description": "Valeur à utiliser dans une configuration si \"defines\" n'est pas spécifié ou valeurs à insérer si \"${default}\" est présent dans \"defines\".",
	"c_cpp.configuration.default.macFrameworkPath.description": "Valeur à utiliser dans une configuration si \"macFrameworkPath\" n'est pas spécifié ou valeurs à insérer si \"${default}\" est présent dans \"macFrameworkPath\".",
	"c_cpp.configuration.default.windowsSdkVersion.description": "Version du chemin d'inclusion du SDK Windows à utiliser sur Windows, par ex., '10.0.17134.0'.",
	"c_cpp.configuration.default.compileCommands.description": "Valeur à utiliser dans une configuration si \"compileCommands\" n'est pas spécifié ou est défini sur \"${default}\".",
	"c_cpp.configuration.default.forcedInclude.description": "Valeur à utiliser dans une configuration si \"forcedInclude\" n'est pas spécifié ou valeurs à insérer si \"${default}\" est présent dans \"forcedInclude\".",
	"c_cpp.configuration.default.intelliSenseMode.description": "Valeur à utiliser dans une configuration si \"intelliSenseMode\" n'est pas spécifié ou est défini sur \"${default}\".",
	"c_cpp.configuration.default.compilerPath.description": "Valeur à utiliser dans une configuration si \"compilerPath\" n'est pas spécifié ou est défini sur \"${default}\".",
	"c_cpp.configuration.default.compilerArgs.description": "Valeur à utiliser dans une configuration si \"compilerArgs\" n'est pas spécifié ou est défini sur \"${default}\".",
	"c_cpp.configuration.default.cStandard.description": "Valeur à utiliser dans une configuration si \"cStandard\" n'est pas spécifié ou est défini sur \"${default}\".",
	"c_cpp.configuration.default.cppStandard.description": "Valeur à utiliser dans une configuration si \"cppStandard\" n'est pas spécifié ou est défini sur \"${default}\".",
	"c_cpp.configuration.default.configurationProvider.description": "Valeur à utiliser dans une configuration si \"configurationProvider\" n'est pas spécifié ou est défini sur \"${default}\".",
	"c_cpp.configuration.default.browse.path.description": "Valeur à utiliser dans une configuration si \"browse.path\" n'est pas spécifié ou valeurs à insérer si \"${default}\" est présent dans \"browse.path\".",
	"c_cpp.configuration.default.browse.databaseFilename.description": "Valeur à utiliser dans une configuration si \"browse.databaseFilename\" n'est pas spécifié ou a la valeur \"${default}\".",
	"c_cpp.configuration.default.browse.limitSymbolsToIncludedHeaders.description": "Valeur à utiliser dans une configuration si \"browse.limitSymbolsToIncludedHeaders\" n'est pas spécifié ou a la valeur \"${default}\".",
	"c_cpp.configuration.default.systemIncludePath.description": "Valeur à utiliser pour le chemin d'inclusion système. Si cette option est définie, elle remplace le chemin d'inclusion système obtenu via les paramètres \"compilerPath\" et \"compileCommands\".",
	"c_cpp.configuration.default.enableConfigurationSquiggles.description": "Contrôle si l'extension signale les erreurs détectées dans c_cpp_properties.json.",
	"c_cpp.configuration.default.customConfigurationVariables.description": "Valeur à utiliser dans une configuration si \"customConfigurationVariables\" n'est pas défini, ou valeurs à insérer si \"${default}\" est présent dans \"customConfigurationVariables\".",
	"c_cpp.configuration.updateChannel.description": "Définissez \"Insiders\" pour télécharger et installer automatiquement les dernières builds Insiders de l'extension, qui comprend les fonctionnalités à venir et des résolutions de bogues.",
	"c_cpp.configuration.experimentalFeatures.description": "Contrôle si les fonctionnalités \"expérimentales\" sont utilisables.",
	"c_cpp.configuration.suggestSnippets.description": "Si la valeur est true, des extraits de code sont fournis par le serveur de langage.",
	"c_cpp.configuration.enhancedColorization.description": "Si cette option est activée, la couleur du code est déterminée par IntelliSense. Ce paramètre n'a pas d'effet si IntelliSense est désactivé ou utilise le thème Contraste élevé par défaut.",
	"c_cpp.configuration.codeFolding.description": "Si cette fonctionnalité est activée, les plages de pliage de code sont fournies par le serveur de langage.",
	"c_cpp.configuration.vcpkg.enabled.markdownDescription": "Activez les services d'intégration pour le [gestionnaire de dépendances vcpkg] (https://aka.ms/vcpkg/).",
	"c_cpp.configuration.renameRequiresIdentifier.description": "Si la valeur est true, l'opération Renommer le symbole nécessite un identificateur C/C++ valide.",
	"c_cpp.configuration.debugger.useBacktickCommandSubstitution.description": "Si la valeur est true, le remplacement de la commande shell du débogueur utilise un accent grave (`) obsolète",
	"c_cpp.contributes.views.cppReferencesView.title": "C/C++ : Autres résultats des références",
	"c_cpp.debuggers.pipeTransport.description": "Quand ce paramètre est présent, indique au débogueur de se connecter à un ordinateur distant en se servant d'un autre exécutable comme canal de relais d'entrée/de sortie standard entre VS Code et l'exécutable du back-end du débogueur MI (par exemple, gdb).",
	"c_cpp.debuggers.pipeTransport.default.pipeProgram": "entrez le chemin complet du nom du programme de canal, par exemple '/usr/bin/ssh'",
	"c_cpp.debuggers.pipeTransport.default.debuggerPath": "Chemin complet du débogueur sur la machine cible, par exemple /usr/bin/gdb.",
	"c_cpp.debuggers.pipeTransport.debuggerPath.description": "Chemin complet du débogueur sur la machine cible, par exemple /usr/bin/gdb.",
	"c_cpp.debuggers.pipeTransport.pipeCwd.description": "Chemin complet du répertoire de travail du programme canal.",
	"c_cpp.debuggers.pipeTransport.pipeProgram.description": "Commande canal complète à exécuter.",
	"c_cpp.debuggers.pipeTransport.pipeArgs.description": "Arguments de ligne de commande passés au programme canal pour configurer la connexion.",
	"c_cpp.debuggers.pipeTransport.pipeEnv.description": "Variables d'environnement passées au programme canal.",
	"c_cpp.debuggers.pipeTransport.quoteArgs.description": "Si des arguments individuels de pipeProgram contiennent des caractères (par exemple des espaces ou des tabulations), doivent-ils être placés entre guillemets ? Si la valeur est 'false', la commande de débogueur n'est plus automatiquement placée entre guillemets. \nLa valeur par défaut est 'true'.",
	"c_cpp.debuggers.logging.description": "Indicateurs facultatifs pour déterminer les types de messages à journaliser dans la console de débogage.",
	"c_cpp.debuggers.logging.exceptions.description": "Indicateur facultatif pour déterminer si les messages d'exception doivent être journalisés dans la console de débogage. La valeur par défaut est true.",
	"c_cpp.debuggers.logging.moduleLoad.description": "Indicateur facultatif pour déterminer si les événements de chargement de module doivent être journalisés dans la console de débogage. La valeur par défaut est true.",
	"c_cpp.debuggers.logging.programOutput.description": "Indicateur facultatif pour déterminer si la sortie du programme doit être journalisée dans la console de débogage. La valeur par défaut est true.",
	"c_cpp.debuggers.logging.engineLogging.description": "Indicateur facultatif pour déterminer si les messages du moteur de débogage de diagnostic doivent être journalisés dans la console de débogage. La valeur par défaut est false.",
	"c_cpp.debuggers.logging.trace.description": "Indicateur facultatif pour déterminer si le suivi de commande de l'adaptateur de diagnostic doit être journalisé dans la console de débogage. La valeur par défaut est false.",
	"c_cpp.debuggers.logging.traceResponse.description": "Indicateur facultatif pour déterminer si le suivi de commande et de réponse de l'adaptateur de diagnostic doit être journalisé dans la console de débogage. La valeur par défaut est false.",
	"c_cpp.debuggers.cppvsdbg.logging.threadExit.description": "Indicateur facultatif pour déterminer si les messages indiquant la sortie du thread doivent être journalisés dans la console de débogage. Valeur par défaut : 'false'.",
	"c_cpp.debuggers.cppvsdbg.logging.processExit.description": "Indicateur facultatif pour déterminer si les messages indiquant la sortie du processus cible doivent être journalisés dans la console de débogage ou si le débogage est arrêté. Valeur par défaut : 'true'.",
	"c_cpp.debuggers.text.description": "Commande de débogueur à exécuter.",
	"c_cpp.debuggers.description.description": "Description facultative de la commande.",
	"c_cpp.debuggers.ignoreFailures.description": "Si la valeur est true, les échecs de la commande doivent être ignorés. La valeur par défaut est false.",
	"c_cpp.debuggers.program.description": "Chemin complet du programme exécutable.",
	"c_cpp.debuggers.args.description": "Arguments de ligne de commande passés au programme.",
	"c_cpp.debuggers.cppdbg.type.description": "Type du moteur. Doit être \"cppdbg\".",
	"c_cpp.debuggers.cppvsdbg.type.description": "Type du moteur. Doit être \"cppvsdbg\".",
	"c_cpp.debuggers.targetArchitecture.description": "Architecture de l'élément débogué. Elle est automatiquement détectée, sauf si ce paramètre est défini. Les valeurs autorisées sont x86, arm, arm64, mips, x64, amd64, x86_64.",
	"c_cpp.debuggers.cwd.description": "Répertoire de travail de la cible",
	"c_cpp.debuggers.setupCommands.description": "Une ou plusieurs commandes GDB/LLDB à exécuter pour configurer le débogueur sous-jacent. Exemple : \"setupCommands\": [ { \"text\": \"-enable-pretty-printing\", \"description\": \"Enable GDB pretty printing\", \"ignoreFailures\": true }].",
	"c_cpp.debuggers.customLaunchSetupCommands.description": "Si ceci est indiqué, les commandes par défaut utilisées pour lancer une cible sont remplacées par d'autres commandes. Par exemple, \"-target-attach\" permet d'attacher un processus cible. Une liste de commandes vide remplace les commandes de lancement, ce qui peut être utile si le débogueur reçoit des options de lancement sous forme d'options de ligne de commande. Exemple : \"customLaunchSetupCommands\": [ { \"text\": \"target-run\", \"description\": \"run target\", \"ignoreFailures\": false }].",
	"c_cpp.debuggers.launchCompleteCommand.description": "Commande à exécuter une fois le débogueur entièrement configuré pour déclencher l'exécution du processus cible. Les valeurs autorisées sont \"exec-run\", \"exec-continue\", \"None\". La valeur par défaut est \"exec-run\".",
	"c_cpp.debuggers.cppdbg.visualizerFile.description": "Fichier .natvis à utiliser pendant le débogage de ce processus. Cette option n'est pas compatible avec l'impression en mode Pretty GDB. Consultez également \"showDisplayString\" en cas d'utilisation de ce paramètre.",
	"c_cpp.debuggers.cppvsdbg.visualizerFile.description": "Fichier .natvis à utiliser pendant le débogage de ce processus.",
	"c_cpp.debuggers.showDisplayString.description": "Quand un visualizerFile est spécifié, showDisplayString active la chaîne d'affichage. Si vous activez cette option, les performances peuvent être ralenties pendant le débogage.",
	"c_cpp.debuggers.environment.description": "Variables d'environnement à ajouter à l'environnement du programme. Exemple : [ { \"name\": \"squid\", \"value\": \"clam\" } ].",
	"c_cpp.debuggers.envFile.description": "Chemin absolu d'un fichier contenant des définitions de variable d'environnement. Ce fichier a des paires clé-valeur séparées par un signe égal par ligne. Par exemple, CLÉ=VALEUR",
	"c_cpp.debuggers.additionalSOLibSearchPath.description": "Liste de répertoires séparés par des points-virgules à utiliser pour rechercher des fichiers .so. Exemple : \"c:\\dir1;c:\\dir2\".",
	"c_cpp.debuggers.MIMode.description": "Indique le débogueur de console auquel MIDebugEngine se connecte. Les valeurs autorisées sont \"gdb\" \"lldb\".",
	"c_cpp.debuggers.miDebuggerPath.description": "Chemin du débogueur MI (par exemple gdb). Si aucune valeur n'est spécifiée, le chemin du débogueur est recherché en premier lieu.",
	"c_cpp.debuggers.miDebuggerArgs.description": "Arguments supplémentaires pour le débogueur MI (par exemple gdb).",
	"c_cpp.debuggers.miDebuggerServerAddress.description": "Adresse réseau du serveur du débogueur MI auquel se connecter (par exemple : localhost:1234).",
	"c_cpp.debuggers.stopAtEntry.description": "Paramètre facultatif. Si la valeur est true, le débogueur doit s'arrêter au point d'entrée de la cible. Si processId est passé, le paramètre n'a aucun effet.",
	"c_cpp.debuggers.debugServerPath.description": "Chemin complet facultatif du serveur de débogage à lancer. La valeur par défaut est null.",
	"c_cpp.debuggers.debugServerArgs.description": "Arguments facultatifs du serveur de débogage. La valeur par défaut est null.",
	"c_cpp.debuggers.serverStarted.description": "Modèle facultatif de démarrage du serveur à rechercher dans la sortie du serveur de débogage. La valeur par défaut est null.",
	"c_cpp.debuggers.filterStdout.description": "Permet de rechercher dans le flux stdout le modèle correspondant au démarrage du serveur, et de journaliser stdout dans la sortie de débogage. La valeur par défaut est true.",
	"c_cpp.debuggers.filterStderr.description": "Permet de rechercher dans le flux stderr le modèle correspondant au démarrage du serveur, et de journaliser stderr dans la sortie de débogage. La valeur par défaut est false.",
	"c_cpp.debuggers.serverLaunchTimeout.description": "Temps facultatif, en millisecondes, pendant lequel le débogueur doit attendre que debugServer démarre. La valeur par défaut est 10 000.",
	"c_cpp.debuggers.coreDumpPath.description": "Chemin complet facultatif d'un fichier d'image mémoire principal pour le programme spécifié. La valeur par défaut est null.",
	"c_cpp.debuggers.cppdbg.externalConsole.description": "Si la valeur est true, une console est lancée pour l'élément débogué. Si la valeur est false, sur Linux et Windows, il s'affiche dans la console intégrée.",
	"c_cpp.debuggers.cppvsdbg.externalConsole.description": "Si la valeur est true, une console est lancée pour l'élément débogué. Si la valeur est false, aucune console n'est lancée.",
	"c_cpp.debuggers.avoidWindowsConsoleRedirection.description": "Si la valeur est true, désactive la redirection de la console de l'élément débogué nécessaire pour prendre en charge le terminal intégré.",
	"c_cpp.debuggers.sourceFileMap.description": "Mappages de fichier source facultatifs passés au moteur de débogage. Exemple : '{\"/original/source/path\":\"/current/source/path\" }'",
	"c_cpp.debuggers.processId.anyOf.description": "ID de processus facultatif auquel attacher le débogueur. Utilisez \"${command:pickProcess}\" pour obtenir la liste des processus locaux en cours d'exécution à attacher. Notez que certaines plateformes nécessitent des privilèges d'administrateur pour attacher un processus.",
	"c_cpp.debuggers.symbolSearchPath.description": "Liste de répertoires séparés par des points-virgules à utiliser pour rechercher les fichiers de symboles (c'est-à-dire, pdb). Exemple : \"c:\\dir1;c:\\dir2\".",
	"c_cpp.debuggers.dumpPath.description": "Chemin complet facultatif d'un fichier d'image mémoire pour le programme spécifié. Exemple : \"c:\\temp\\app.dmp\". La valeur par défaut est null.",
	"c_cpp.debuggers.enableDebugHeap.description": "Si la valeur est false, le processus est lancé avec le tas de débogage désactivé. Cette valeur définit la variable d'environnement '_NO_DEBUG_HEAP' sur '1'.",
	"c_cpp.debuggers.symbolLoadInfo.description": "Contrôle explicite du chargement des symboles.",
	"c_cpp.debuggers.symbolLoadInfo.loadAll.description": "Si la valeur est true, les symboles de toutes les bibliothèques sont chargés. Sinon, aucun symbole solib n'est chargé. La valeur par défaut est true.",
	"c_cpp.debuggers.symbolLoadInfo.exceptionList.description": "Liste des noms de fichiers (caractères génériques autorisés) séparés par des points-virgules ';'. Modifie le comportement de LoadAll. Si LoadAll a la valeur true, les symboles des bibliothèques correspondant à un nom de la liste ne sont pas chargés. Sinon, les symboles des bibliothèques ayant une correspondance sont chargés. Exemple : \"foo.so;bar.so\"",
	"c_cpp.debuggers.requireExactSource.description": "Indicateur facultatif pour exiger que le code source actuel corresponde au fichier pdb."
}